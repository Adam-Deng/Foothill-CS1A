/*
*Source-code of Assignment #9 for CS 1A
* Written by Lei Deng, 03/07/2016
*
*This programme is using to simulate a pizza ordering. The user could choose
* the size of pizza, how many toppings to added to, and get the result and
* price returned

* */


import java.util.*;

public class Foothill
{
   public static void main(String[] args)
   {
      PizzaOrder pizza = new PizzaOrder();
      //outer-loop to validate the pizza size
      while (true)
      {
         //get user-input of the pizza size
         int size = charSizeConvertTointSize(getSizeFromUser());
         if (size == -1)//user want to quit
         {
            System.out.println("Thank you! Good buy!");
            break;
         } else if (size == -2)//user doesn't give a valid input
         {
            System.out.println("Error! Please read the instruction and try " +
                    "again!");
         } else//user input a valid value
         {
            pizza.setSize(size);
            System.out.println("Current Pizza: " + pizza.stringizeSize());
            //inner-loop to validate topping
            while (true)
            {
               //display topping menu
               displayMainMenu();
               //catch user response
               Scanner input = new Scanner(System.in);
               int userInput = input.nextInt();
               System.out.println("Selection? " + userInput);
               System.out.println();
               //topping value validation
               if (userInput < 0 || userInput > PizzaOrder.TOPPINGS_OFFERED
                       .length)
               {
                  System.out.println("Error! Please only use the number on " +
                          "screen or press 0 when done!");
               } else if (userInput == 0)//user want to end current transaction
               {
                  pizza.displayPizza();
                  pizza.resetToppings();
                  System.out.println();
                  break;
               } else//catch user input
               {
                  pizza.addTopping(userInput - 1);
                  System.out.println("Current Pizza: " + pizza.stringizeSize() +
                          pizza.getToppings());
               }
            }
         }
      }

   }

   static void displayMainMenu()
   {
      System.out.println("Select an item by number ( 0 when done):");
      //display topping menu
      for (int i = 0; i < PizzaOrder.TOPPINGS_OFFERED.length; i++)
      {
         System.out.println(i + 1 + "." + PizzaOrder.TOPPINGS_OFFERED[i]);
      }
   }

   //pizza size validation despite of casing
   static char getSizeFromUser()
   {
      Scanner input = new Scanner(System.in);
      String prompt = "Select size of pizza to order ('s', 'm', 'l', 'd') " +
              "or 'q' to quit: ";
      System.out.print(prompt);
      String userInput = input.next();
      char charSize = (userInput.toLowerCase()).charAt(0);
      return charSize;
   }

   //convert the size value from char to int
   static int charSizeConvertTointSize(char charSize)
   {
      int intSize;
      if (charSize == 's')
      {
         intSize = 0;
      } else if (charSize == 'm')
      {
         intSize = 1;
      } else if (charSize == 'l')
      {
         intSize = 2;
      } else if (charSize == 'd')
      {
         intSize = 3;
      } else if (charSize == 'q')
      {
         intSize = -1;
      } else
      {
         intSize = -2;
      }
      return intSize;
   }
}


class PizzaOrder
{
   public static final String[] TOPPINGS_OFFERED = {"onions", "bell peppers",
           "olives", "pepperoni"};
   public static final double TOPPING_BASE_COST = 1;
   public static final double BASE_PRICE = 10;
   public final double MEDIUM_PRICE = BASE_PRICE * 1.15;
   public final double LARGE_PRICE = BASE_PRICE * 1.25;
   public final double SUPER_DUPER_PRICE = BASE_PRICE * 1.35;
   private int size;
   private String[] toppings;
   public final int MAX_TOPPINGS = 10;
   private int numToppings;

   //constructor
   public PizzaOrder()
   {
      size = 0;
   }

   public PizzaOrder(int size)
   {
      if (!setSize(size))
      {
         this.size = 0;
      }
   }

   //mutator
   public boolean setSize(int size)
   {
      if (size < 0 || size > 3)
      {
         return false;
      }
      this.size = size;
      return true;
   }

   //accessor
   public int getSize()
   {
      return size;
   }

   //using string value to append string topping
   public boolean addTopping(String topping)
   {
      if (topping == null || !(topping.equalsIgnoreCase(TOPPINGS_OFFERED
              .toString())))
      {
         return false;
      } else if (toppings == null)
      {
         toppings = new String[1];
         toppings[0] = topping;
      }
      //use new temparray to append the topping
      else
      {
         String[] tempArray = new String[toppings.length + 1];
         for (int i = 0; i < toppings.length; i++)
         {
            tempArray[i] = toppings[i];
         }
         tempArray[toppings.length] = topping;
         toppings = new String[tempArray.length];
         for (int i = 0; i < tempArray.length; i++)
         {
            toppings[i] = tempArray[i];
         }
      }
      numToppings++;
      if (numToppings <= MAX_TOPPINGS)
      {
         return true;
      } else
      {
         return false;
      }
   }

   //using int value to append topping
   public boolean addTopping(int n)
   {
      if (n < 0 || n > TOPPINGS_OFFERED.length)
      {
         return false;
      } else if (toppings == null)
      {
         toppings = new String[1];
         toppings[0] = TOPPINGS_OFFERED[n];
      }
      //using arraylist to add topping
      else
      {
         List<String> toppingList = Arrays.asList(toppings);
         List<String> tempList = new ArrayList<>(toppingList);
         tempList.add(TOPPINGS_OFFERED[n]);
         String[] tempArray = new String[tempList.size()];
         toppings = tempList.toArray(tempArray);
      }
      numToppings++;
      if (numToppings <= MAX_TOPPINGS)
      {
         return true;
      } else
      {
         return false;
      }
   }

   public double getPrice()
   {
      if (getSize() == 0)
      {
         return TOPPING_BASE_COST * numToppings + BASE_PRICE;
      } else if (getSize() == 1)
      {
         return TOPPING_BASE_COST * numToppings + MEDIUM_PRICE;
      } else if (getSize() == 2)
      {
         return TOPPING_BASE_COST * numToppings + LARGE_PRICE;
      } else
      {
         return TOPPING_BASE_COST * numToppings + SUPER_DUPER_PRICE;
      }
   }

   public String stringizeSize()
   {
      if (size == 0)
      {
         return "small";
      } else if (size == 1)
      {
         return "medium";
      } else if (size == 2)
      {
         return "large";
      } else
      {
         return "super-duper";
      }
   }

   public String getToppings()
   {
      String toppingList = "";
      for (int i = 0; i < toppings.length; i++)
      {
         toppingList = toppingList + " + " + toppings[i];
      }
      return toppingList;
   }

   public void displayPizza()
   {
      System.out.println(stringizeSize() + getToppings());
      System.out.println("Total price due is " + getPrice());
   }

   //reset value after exit current transaction
   public void resetToppings()
   {
      toppings = new String[0];
      numToppings = 0;
   }
}







/*--------------------sample run--------------------
Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: e
Error! Please read the instruction and try again!
Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: 9
Error! Please read the instruction and try again!
Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: jump
Error! Please read the instruction and try again!
Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: M
Current Pizza: medium
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: medium + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: medium + bell peppers + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
4
Selection? 4

Current Pizza: medium + bell peppers + bell peppers + pepperoni
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
0
Selection? 0

medium + bell peppers + bell peppers + pepperoni
Total price due is 14.5

Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: l
Current Pizza: large
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
1
Selection? 1

Current Pizza: large + onions
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: large + onions + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
0
Selection? 0

large + onions + bell peppers
Total price due is 14.5

Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: doub
Current Pizza: super-duper
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
5
Selection? 5

Error! Please only use the number on screen or press 0 when done!
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
8
Selection? 8

Error! Please only use the number on screen or press 0 when done!
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
1
Selection? 1

Current Pizza: super-duper + onions
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: super-duper + onions + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
4
Selection? 4

Current Pizza: super-duper + onions + bell peppers + pepperoni
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: super-duper + onions + bell peppers + pepperoni + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
0
Selection? 0

super-duper + onions + bell peppers + pepperoni + bell peppers
Total price due is 17.5

Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: s
Current Pizza: small
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
2
Selection? 2

Current Pizza: small + bell peppers
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
3
Selection? 3

Current Pizza: small + bell peppers + olives
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
3
Selection? 3

Current Pizza: small + bell peppers + olives + olives
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
1
Selection? 1

Current Pizza: small + bell peppers + olives + olives + onions
Select an item by number ( 0 when done):
1.onions
2.bell peppers
3.olives
4.pepperoni
0
Selection? 0

small + bell peppers + olives + olives + onions
Total price due is 14.0

Select size of pizza to order ('s', 'm', 'l', 'd') or 'q' to quit: q
Thank you! Good buy!
----------------------------------------*/